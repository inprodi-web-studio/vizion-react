// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rhtpiygehaYPHyZZdWmjau
// Component: lDqK0BqxjV32
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import AppShell from "../../AppShell"; // plasmic-import: ejt2_Xh6tCty/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: rhtpiygehaYPHyZZdWmjau/projectcss
import sty from "./PlasmicCrmEscritorio.module.css"; // plasmic-import: lDqK0BqxjV32/css

createPlasmicElementProxy;

export const PlasmicCrmEscritorio__VariantProps = new Array();

export const PlasmicCrmEscritorio__ArgProps = new Array();

const $$ = {};

function PlasmicCrmEscritorio__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"mainSection"}
          data-plasmic-override={overrides.mainSection}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.mainSection
          )}
        >
          <AppShell
            data-plasmic-name={"appShell"}
            data-plasmic-override={overrides.appShell}
            className={classNames("__wab_instance", sty.appShell)}
            pageContent2={
              <div
                data-plasmic-name={"container2"}
                data-plasmic-override={overrides.container2}
                className={classNames(projectcss.all, sty.container2)}
              />
            }
            pageTitle={"Escritorio"}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  mainSection: ["mainSection", "appShell", "container2"],
  appShell: ["appShell", "container2"],
  container2: ["container2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicCrmEscritorio__ArgProps,
          internalVariantPropNames: PlasmicCrmEscritorio__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCrmEscritorio__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "mainSection") {
    func.displayName = "PlasmicCrmEscritorio";
  } else {
    func.displayName = `PlasmicCrmEscritorio.${nodeName}`;
  }
  return func;
}

export const PlasmicCrmEscritorio = Object.assign(
  // Top-level PlasmicCrmEscritorio renders the root element
  makeNodeComponent("mainSection"),
  {
    // Helper components rendering sub-elements
    appShell: makeNodeComponent("appShell"),
    container2: makeNodeComponent("container2"),
    // Metadata about props expected for PlasmicCrmEscritorio
    internalVariantProps: PlasmicCrmEscritorio__VariantProps,
    internalArgProps: PlasmicCrmEscritorio__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Escritorio",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicCrmEscritorio;
/* prettier-ignore-end */
